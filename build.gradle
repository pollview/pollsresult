//apply plugin: 'com.android.library'
//
//android {
//    compileSdkVersion 26
//
//
//
//    defaultConfig {
//        minSdkVersion 15
//        targetSdkVersion 26
//        versionCode 1
//        versionName "1.0"
//
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//
//    }
//
//
//    }


plugins {
    id "java"
    id "com.jfrog.artifactory" version "4.5.4"
    id "com.jfrog.bintray" version "1.7.3"
    id "maven-publish"
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

// run gradle with "-Dsnapshot=true" to automatically append "-SNAPSHOT" to the version
version = '1.0.0' //+ (Boolean.valueOf(System.getProperty("snapshot")) ? "-SNAPSHOT" : "")
sourceCompatibility = 1.8

ext{
    bintrayUser = System.getProperty("bintray.user")
    bintrayKey = System.getProperty("bintray.key")
    buildNumber = System.getProperty("build.number")
}

//dependencies {
//    compile('org.slf4j:slf4j-api:1.7.25')
//    testCompile('org.slf4j:slf4j-log4j12:1.7.25')
//    testCompile('org.testng:testng:6.8.7')
//}
dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:26.1.0'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.1'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "pollsresult"
            name "pollview"
            email "pollviewapp@gmail.com"
        }
    }

    scm {
        url "https://github.com/pollview/pollsresult"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId 'io.reflectoring.pollsresult'
            artifactId 'pollsresult'
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Parse textual Diffs with Java')
                root.appendNode('name', 'pollsresult')
                root.appendNode('url', 'https://github.com/pollview/pollsresult')
                root.children().last() + pomConfig
            }
        }
    }
}

//artifactory {
//    contextUrl = 'http://oss.jfrog.org'
//    publish {
//        repository {
//            repoKey = 'oss-snapshot-local'
//            username = bintrayUser
//            password = bintrayKey
//        }
//        defaults {
//            publications('mavenPublication')
//            publishArtifacts = true
//            publishPom = true
//            properties = [
//                    'build.number': buildNumber,
//                    'build.name': 'pollsresult'
//            ]
//        }
//    }
//    resolve {
//        repoKey = 'jcenter'
//    }
//    clientConfig.info.setBuildNumber(buildNumber)
//    clientConfig.info.setBuildName('pollsresult')
//}

bintray {
    user = bintrayUser
    key = bintrayKey
    publications = ['mavenPublication']

    pkg {
        repo = 'maven-releases'
        name = 'pollsresult'
        userOrg = 'reflectoring'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/pollview/pollsresult'
        version {
            name = project.version
            desc = "build ${buildNumber}"
            released  = new Date()
        }
    }

    publish = true
}